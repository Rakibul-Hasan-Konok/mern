name: Build & Push MERN Docker Images

on:
  push:
    branches:
      - master       # master branch push trigger
    tags:
      - 'v*'         # Git tag push trigger (v1, v2...)

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Docker Hub Login
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Step 4: Set Docker image version (tag from Git tag or commit count)
      - name: Set Docker image version
        id: vars
        run: |
          if [ -n "$GITHUB_REF" ] && [[ "$GITHUB_REF" == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            VERSION=$(git rev-list --count HEAD)
            echo "VERSION=v$VERSION" >> $GITHUB_ENV
          fi

      # Step 5: Build & Push Backend
      - name: Build & Push Backend
        run: |
          cd ./mern/backend
          IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/mern-backend
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$VERSION .
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION

      # Step 6: Build & Push Frontend
      - name: Build & Push Frontend
        run: |
          cd ./mern/frontend
          IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/mern-frontend
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$VERSION .
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION

      # Step 7: Push MongoDB official image
      - name: Push MongoDB
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/mern-mongodb
          docker pull mongo:latest
          docker tag mongo:latest $IMAGE_NAME:latest
          docker tag mongo:latest $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
